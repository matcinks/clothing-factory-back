spring:
  h2:
    console:
      enabled: true
      path: '/console'
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQL81Dialect
  #      ddl-auto: validate
#      format_sql: true
#    database-platform: org.hibernate.dialect.PostgreSQL94Dialect
  #      dialect: PostgreSQL81Dialect
  #    show-sql: true
#  dodatkowo
#  format_sql: true

#  spring.jpa.database-platform = org.hibernate.dialect.PostgreSQL94Dialect
#  spring.jpa.show-sql = false
#  spring.jpa.hibernate.ddl-auto = create-drop
#  spring.jpa.hibernate.naming.implicit-strategy = org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
#  spring.jpa.properties.hibernate.format_sql=true


#
#  spring.jpa.hibernate.ddl-auto=update
#  spring.jpa.show-sql=true
#  spring.jpa.properties.hibernate.format_sql=true
#  spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL81Dialect

  datasource:
#    url: jdbc:h2:mem:testdb # utworzenie bazy danych H2 w pamieci z adresem testdb
    url: jdbc:postgresql://localhost:5434/clothing_factory
    username: mat
    password: QaWsEd123

  flyway:
    locations: classpath:db/migration/structure, classpath:db/migration/content # wskazanie katalogow z migracjami

# logowanie zapytan sql
logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
        type.descriptor.sql.BasicBinder: TRACE